<?xml version="1.0" encoding="US-ASCII"?>

<!-- ============= Automating Simulation Sessions with ECS ========== -->
<chapter id="writing-ecs"> 
  <title>Automating Simulation Sessions with &ecell Session Script</title> 

  <highlights>
    <para>By reading this chapter, you can get information about the
    following items:
      <simplelist>
	<member>What is &ecell Session Script (<acronym>ESS</acronym>).</member>

	<member>How to automate the simulation by writing the
          <acronym>ESS</acronym> files.</member>

	<member>How to run &ecell in scripting mode.</member>

        <member>How to customize existing frontend software components.</member>
	<member>How to write a new frontend program to &ecell&.</member>

      </simplelist>
</para>
  </highlights>

  <sect1>
    <title>What is &ecell Session Script?</title>

    <para>need description here.</para>

  </sect1>


  


  <sect1>
    <title>Running &ecell Session Script</title>

    <para>There are roughly three ways to execute <acronym>ESS</acronym>;

      <itemizedlist>
	<listitem>
	  <para>Execute the script from operating system's command
	  line (shell prompt).
          </para>
	</listitem>
	<listitem>
	  <para>Load the script from a frontend software such as Osogo
	  Session Monitor.</para>
	</listitem>
	<listitem>
	  <para>Use SessionManager to automate the invokation of the
	  simulation sessions, as well as the generation of the <acronym>ESS</acronym>
	  itself, for simulations involving multiple runs of the
	  simulator.</para>
	</listitem>

      </itemizedlist>
    </para>

    <sect2>
      <title>Running the <acronym>ESS</acronym> in command line mode</title>

      <para>To run a <acronym>ESS</acronym> in command line, use
      <command>ecell3-session</command> command.
      </para>

      <cmdsynopsis>
	<command>ecell3-session</command>
	<arg><replaceable>file.ess</replaceable></arg>
      </cmdsynopsis>

      
      <sect3>
	<title>In batch mode</title>
	

	<para>
	To execute a <acronym>ESS</acronym> file, type the following
	command at the shell prompt:

        <screen>
          <userinput>
            <command>ecell3-session</command> <replaceable>filename.ess</replaceable>
          </userinput>
        </screen>

        <command>ecell3-session</command> command loads the
        <acronym>ESS</acronym> file and runs a single simulation
        session as described in the file.
      </para>

      </sect3>

      <sect3>
	<title>In interactive mode</title>
	<para>??? - is this possible?</para>
      </sect3>

      <sect3>
	<title>Giving parameters to the script</title>
	<para>not implemented yet</para>
      </sect3>


    </sect2>

    <sect2>
      <title>Loading <acronym>ESS</acronym> from Osogo Session Monitor</title>

      <para>need explanation here, or just say see osogo's manual?</para>

    </sect2>


    <sect2>
      <title>Using SessionManager</title>

      <para>need description here.</para>

    </sect2>

  </sect1>

  <sect1>
    <title>Writing &ecell Session Script</title>

    <para>The syntax of <acronym>ESS</acronym> is a full set of
    <productname>Python</productname> script with some convenient
    features.</para>

    <para>Three major groups of object classes which are commonly used
    in ESS are <classname>Session</classname>,
    <classname>ObjectStub</classname> classes, and
    <classname>Datafile</classname> classes.</para>

    <sect2>
      <title>Using Session methods</title>


    <para>In <acronym>ESS</acronym>, methods defined in
    <classname>Session</classname> class, or Session API, can be used.
    For example, to run the simulation for 10 seconds, you may use
    <methodname>run</methodname> method of a
    <classname>Session</classname> object in your
    <acronym>ESS</acronym> file.

    <informalexample> 
	<programlisting>self.run( 10 )</programlisting>
    </informalexample> 

    where <methodname>self.</methodname> is the current
    <classname>Session</classname> object given by the system.
    </para>

    <para>Unlike usual <productname>Python</productname> script, you
    have no need to specify the object on which the method is called
    if the object is the current <classname>Session</classname>.  
    Thus <methodname>self.</methodname> can be ommited.
    <informalexample>
	<programlisting>run( 10 )</programlisting>
    </informalexample>
    </para>


      <para>
Write something about step(), print(), loadModel(), getCurrentTime() here.
</para>


    <example>
      <title>A simple <acronym>ESS</acronym> example.</title>

      <programlisting>
loadModel( 'simple.eml' )
run( 100 )
</programlisting>
    </example>

    </sect2>

    <sect2>
      <title>Getting Session parameters.</title>

      <para></para>

    </sect2>


    <sect2>
      <title>Observing and manipulating simulation models</title>

      <sect3>
	<title>What is <classname>ObjectStub</classname>?</title>

	<para><classname>ObjectStub</classname> is a...</para>

	<para>Explanation of backend/frontend isolation may come here.</para>

	<para>ObjectStub, EntityStub, StepperStub, LoggerStub</para>

      </sect3>

    </sect2>

    <sect2>
      <title>Saving and handling data files</title>

      <para></para>

      <sect3>
	<title>Saving <classname>Logger</classname> data</title>

	<para>Howtos about <classname>ECDDataFile</classname> should
	come here.</para>
      </sect3>
    </sect2>


  </sect1>


  <sect1>
    <title>List of commonly used methods in ESS</title>

    <para>This section provides full lists of methods implemented in
      classes in &ecell Python library which are commonly used in ESS.
      </para>


    <sect2>
      <title><classname>Session</classname> class</title>

      <para>Methods of <classname>Session</classname> class can be
      devided into the following five groups.</para>

      <itemizedlist>
	<listitem>
	  <para>Session methods</para>
	</listitem>
	<listitem>
	  <para>Simulation methods</para>
	</listitem>
	<listitem>
	  <para>Stepper methods</para>
	</listitem>
	<listitem>
	  <para>Entity methods</para>
	</listitem>
	<listitem>
	  <para>Logger methods</para>
	</listitem>
      </itemizedlist>


      &session-class-api


    </sect2>



  </sect1>

  


</chapter>

<!--
Local Variables:
mode: sgml
sgml-parent-document: ("ecell3-users-manual.xml" "book" "chapter")
End:
-->

